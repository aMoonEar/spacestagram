{"ast":null,"code":"var _jsxFileName = \"/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button, Card, CardActions, CardContent, CardMedia } from \"@mui/material\";\nimport dateFormat from \"dateformat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst heart = require(\"react-animated-heart\"); // every card has:\n// image, like button, title, explanation, date\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\n\nexport const PhotoCard = _ref => {\n  _s();\n\n  let {\n    date,\n    explanation,\n    title,\n    url\n  } = _ref;\n  const [isLiked, setLiked] = React.useState(false);\n  const {\n    Heart\n  } = heart;\n\n  const renderLikeButton = () => {\n    if (isLiked) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setLiked(!isLiked),\n          variant: \"contained\",\n          size: \"small\",\n          children: \"unlike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heart, {\n          isClick: isLiked,\n          onClick: () => setLiked(!isLiked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setLiked(!isLiked),\n      variant: \"contained\",\n      size: \"small\",\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 700,\n      margin: \"auto\",\n      marginTop: \"100px\",\n      boxShadow: 15\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\" // height=\"600\"\n      ,\n      image: url,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        mx: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          marginTop: \"30px\"\n        },\n        gutterBottom: true,\n        variant: \"h2\",\n        component: \"div\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h3\",\n        component: \"div\",\n        children: dateFormat(date, \"dddd, mmmm dS, yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          marginTop: 4\n        },\n        children: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: renderLikeButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoCard, \"H9KTnuaPGAZ7ARuZ+C7CT/stPe4=\");\n\n_c = PhotoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoCard\");","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx"],"names":["React","Typography","Button","Card","CardActions","CardContent","CardMedia","dateFormat","heart","require","PhotoCard","date","explanation","title","url","isLiked","setLiked","useState","Heart","renderLikeButton","maxWidth","margin","marginTop","boxShadow","mx"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,QAMO,eANP;AAOA,OAAOC,UAAP,MAAuB,YAAvB;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;AAEA;;;AASA,OAAO,MAAMC,SAAS,GAAG,QAKU;AAAA;;AAAA,MALT;AACxBC,IAAAA,IADwB;AAExBC,IAAAA,WAFwB;AAGxBC,IAAAA,KAHwB;AAIxBC,IAAAA;AAJwB,GAKS;AACjC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBhB,KAAK,CAACiB,QAAN,CAAwB,KAAxB,CAA5B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYV,KAAlB;;AACA,QAAMW,gBAAgB,GAAG,MAAmB;AAC1C,QAAIJ,OAAJ,EAAa;AACX,0BACE;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF,CADzB;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEA,OAAhB;AAAyB,UAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF;AAAhD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,sBADF;AAYD;;AAED,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF,CADzB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAzBD;;AA2BA,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,SAAS,EAAE,OAA5C;AAAqDC,MAAAA,SAAS,EAAE;AAAhE,KADN;AAAA,4BAGE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,KADZ,CAEE;AAFF;AAGE,MAAA,KAAK,EAAET,GAHT;AAIE,MAAA,GAAG,EAAED;AAJP;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEW,QAAAA,EAAE,EAAE;AAAN,OAAjB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,EAAE,EAAE;AACFF,UAAAA,SAAS,EAAE;AADT,SADN;AAIE,QAAA,YAAY,MAJd;AAKE,QAAA,OAAO,EAAC,IALV;AAME,QAAA,SAAS,EAAC,KANZ;AAAA,kBAQGT;AARH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC,KAAhD;AAAA,kBACGN,UAAU,CAACI,IAAD,EAAO,qBAAP;AADb;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEW,UAAAA,SAAS,EAAE;AAAb,SAAhB;AAAA,kBAAmCV;AAAnC;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAyBE,QAAC,WAAD;AAAA,gBAAcO,gBAAgB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjEM;;GAAMT,S;;KAAAA,S","sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\nimport dateFormat from \"dateformat\";\nconst heart = require(\"react-animated-heart\");\n\n// every card has:\n// image, like button, title, explanation, date\n\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\ntype PhotoCardProps = {\n  date: string;\n  explanation: string;\n  title: string;\n  url: string;\n};\n\nexport const PhotoCard = ({\n  date,\n  explanation,\n  title,\n  url,\n}: PhotoCardProps): JSX.Element => {\n  const [isLiked, setLiked] = React.useState<boolean>(false);\n\n  const { Heart } = heart;\n  const renderLikeButton = (): JSX.Element => {\n    if (isLiked) {\n      return (\n        <>\n          <Button\n            onClick={() => setLiked(!isLiked)}\n            variant=\"contained\"\n            size=\"small\"\n          >\n            unlike\n          </Button>\n          <Heart isClick={isLiked} onClick={() => setLiked(!isLiked)} />\n        </>\n      );\n    }\n\n    return (\n      <Button\n        onClick={() => setLiked(!isLiked)}\n        variant=\"contained\"\n        size=\"small\"\n      >\n        Like\n      </Button>\n    );\n  };\n\n  return (\n    <Card\n      sx={{ maxWidth: 700, margin: \"auto\", marginTop: \"100px\", boxShadow: 15 }}\n    >\n      <CardMedia\n        component=\"img\"\n        // height=\"600\"\n        image={url}\n        alt={title}\n      />\n      <CardContent sx={{ mx: 5 }}>\n        <Typography\n          sx={{\n            marginTop: \"30px\",\n          }}\n          gutterBottom\n          variant=\"h2\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n        <Typography gutterBottom variant=\"h3\" component=\"div\">\n          {dateFormat(date, \"dddd, mmmm dS, yyyy\")}\n        </Typography>\n        <Typography sx={{ marginTop: 4 }}>{explanation}</Typography>\n      </CardContent>\n      <CardActions>{renderLikeButton()}</CardActions>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}