{"ast":null,"code":"import axios from \"axios\";\n\nconst addPhotos = async _ref => {\n  let {\n    startDate,\n    endDate,\n    setLoading,\n    setPhotos,\n    photos\n  } = _ref;\n  let url; // Add the end date to the API request if there is one\n\n  if (endDate) {\n    url = `https://api.nasa.gov/planetary/apod?api_key=ykzQINaucAEoc1RW6I3CqVke24wjlu9JAyrDVcKd&start_date=${startDate}&end_date=${endDate}`;\n  } else {\n    url = `https://api.nasa.gov/planetary/apod?api_key=ykzQINaucAEoc1RW6I3CqVke24wjlu9JAyrDVcKd&start_date=${startDate}`;\n  }\n\n  try {\n    axios.get(url).then(response => {\n      setLoading(false); // Reverse the photos so they appear in chronological order\n\n      const newPhotos = response.data.reverse(); // Combine the two arrays\n\n      setPhotos(photos.concat(newPhotos));\n    });\n  } catch {\n    console.error(\"There was an error retrieving the data\");\n    return undefined;\n  }\n};\n\nconst PhotoService = {\n  addPhotos\n};\nexport default PhotoService;","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/services/photoService.ts"],"names":["axios","addPhotos","startDate","endDate","setLoading","setPhotos","photos","url","get","then","response","newPhotos","data","reverse","concat","console","error","undefined","PhotoService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAWA,MAAMC,SAAS,GAAG,cAMuC;AAAA,MANhC;AACvBC,IAAAA,SADuB;AAEvBC,IAAAA,OAFuB;AAGvBC,IAAAA,UAHuB;AAIvBC,IAAAA,SAJuB;AAKvBC,IAAAA;AALuB,GAMgC;AACvD,MAAIC,GAAJ,CADuD,CAGvD;;AACA,MAAIJ,OAAJ,EAAa;AACXI,IAAAA,GAAG,GAAI,mGAAkGL,SAAU,aAAYC,OAAQ,EAAvI;AACD,GAFD,MAEO;AACLI,IAAAA,GAAG,GAAI,mGAAkGL,SAAU,EAAnH;AACD;;AAED,MAAI;AACFF,IAAAA,KAAK,CAACQ,GAAN,CAAuBD,GAAvB,EAA4BE,IAA5B,CAAkCC,QAAD,IAAc;AAC7CN,MAAAA,UAAU,CAAC,KAAD,CAAV,CAD6C,CAE7C;;AACA,YAAMO,SAAsB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,EAA/B,CAH6C,CAK7C;;AACAR,MAAAA,SAAS,CAACC,MAAM,CAACQ,MAAP,CAAcH,SAAd,CAAD,CAAT;AACD,KAPD;AAQD,GATD,CASE,MAAM;AACNI,IAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd;AACA,WAAOC,SAAP;AACD;AACF,CA7BD;;AA+BA,MAAMC,YAAY,GAAG;AACnBjB,EAAAA;AADmB,CAArB;AAIA,eAAeiB,YAAf","sourcesContent":["import axios from \"axios\";\nimport PhotoData from \"../types/photoData\";\n\ntype PhotoParameters = {\n  startDate: string;\n  endDate?: string;\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  setPhotos: React.Dispatch<React.SetStateAction<PhotoData[]>>;\n  photos: PhotoData[];\n};\n\nconst addPhotos = async ({\n  startDate,\n  endDate,\n  setLoading,\n  setPhotos,\n  photos,\n}: PhotoParameters): Promise<PhotoData[] | undefined> => {\n  let url: string;\n\n  // Add the end date to the API request if there is one\n  if (endDate) {\n    url = `https://api.nasa.gov/planetary/apod?api_key=ykzQINaucAEoc1RW6I3CqVke24wjlu9JAyrDVcKd&start_date=${startDate}&end_date=${endDate}`;\n  } else {\n    url = `https://api.nasa.gov/planetary/apod?api_key=ykzQINaucAEoc1RW6I3CqVke24wjlu9JAyrDVcKd&start_date=${startDate}`;\n  }\n\n  try {\n    axios.get<PhotoData[]>(url).then((response) => {\n      setLoading(false);\n      // Reverse the photos so they appear in chronological order\n      const newPhotos: PhotoData[] = response.data.reverse();\n\n      // Combine the two arrays\n      setPhotos(photos.concat(newPhotos));\n    });\n  } catch {\n    console.error(\"There was an error retrieving the data\");\n    return undefined;\n  }\n};\n\nconst PhotoService = {\n  addPhotos,\n};\n\nexport default PhotoService;\n"]},"metadata":{},"sourceType":"module"}