{"ast":null,"code":"var _jsxFileName = \"/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button, Card, CardActions, CardContent, CardMedia } from \"@mui/material\";\nimport dateFormat from \"dateformat\"; // every card has:\n// image, like button, title, explanation, date\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PhotoCard = _ref => {\n  _s();\n\n  let {\n    date,\n    explanation,\n    title,\n    url\n  } = _ref;\n  const [isLiked, setLiked] = React.useState(false);\n\n  const renderLikeButton = () => {\n    if (isLiked) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLiked(!isLiked),\n        variant: \"contained\",\n        size: \"small\",\n        children: \"unlike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setLiked(!isLiked),\n      variant: \"contained\",\n      size: \"small\",\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 800,\n      margin: \"auto\",\n      marginTop: \"60px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\" // height=\"600\"\n      ,\n      image: url,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        mx: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          marginTop: \"30px\"\n        },\n        gutterBottom: true,\n        variant: \"h2\",\n        component: \"div\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h3\",\n        component: \"div\",\n        children: dateFormat(date, \"dddd, mmmm dS, yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: renderLikeButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoCard, \"H9KTnuaPGAZ7ARuZ+C7CT/stPe4=\");\n\n_c = PhotoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoCard\");","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx"],"names":["React","Typography","Button","Card","CardActions","CardContent","CardMedia","dateFormat","PhotoCard","date","explanation","title","url","isLiked","setLiked","useState","renderLikeButton","maxWidth","margin","marginTop","mx"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,QAMO,eANP;AAOA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;AACA;AAEA;;;AASA,OAAO,MAAMC,SAAS,GAAG,QAKU;AAAA;;AAAA,MALT;AACxBC,IAAAA,IADwB;AAExBC,IAAAA,WAFwB;AAGxBC,IAAAA,KAHwB;AAIxBC,IAAAA;AAJwB,GAKS;AACjC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBd,KAAK,CAACe,QAAN,CAAwB,KAAxB,CAA5B;;AAEA,QAAMC,gBAAgB,GAAG,MAAmB;AAC1C,QAAIH,OAAJ,EAAa;AACX,0BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF,CADzB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;AAED,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF,CADzB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAtBD;;AAwBA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEI,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,SAAS,EAAE;AAA5C,KAAV;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,KADZ,CAEE;AAFF;AAGE,MAAA,KAAK,EAAEP,GAHT;AAIE,MAAA,GAAG,EAAED;AAJP;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAES,QAAAA,EAAE,EAAE;AAAN,OAAjB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,EAAE,EAAE;AACFD,UAAAA,SAAS,EAAE;AADT,SADN;AAIE,QAAA,YAAY,MAJd;AAKE,QAAA,OAAO,EAAC,IALV;AAME,QAAA,SAAS,EAAC,KANZ;AAAA,kBAQGR;AARH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC,KAAhD;AAAA,kBACGJ,UAAU,CAACE,IAAD,EAAO,qBAAP;AADb;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,UAAD;AAAA,kBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAuBE,QAAC,WAAD;AAAA,gBAAcM,gBAAgB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA3DM;;GAAMR,S;;KAAAA,S","sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\nimport dateFormat from \"dateformat\";\n\n// every card has:\n// image, like button, title, explanation, date\n\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\ntype PhotoCardProps = {\n  date: string;\n  explanation: string;\n  title: string;\n  url: string;\n};\n\nexport const PhotoCard = ({\n  date,\n  explanation,\n  title,\n  url,\n}: PhotoCardProps): JSX.Element => {\n  const [isLiked, setLiked] = React.useState<boolean>(false);\n\n  const renderLikeButton = (): JSX.Element => {\n    if (isLiked) {\n      return (\n        <Button\n          onClick={() => setLiked(!isLiked)}\n          variant=\"contained\"\n          size=\"small\"\n        >\n          unlike\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        onClick={() => setLiked(!isLiked)}\n        variant=\"contained\"\n        size=\"small\"\n      >\n        Like\n      </Button>\n    );\n  };\n\n  return (\n    <Card sx={{ maxWidth: 800, margin: \"auto\", marginTop: \"60px\" }}>\n      <CardMedia\n        component=\"img\"\n        // height=\"600\"\n        image={url}\n        alt={title}\n      />\n      <CardContent sx={{ mx: 5 }}>\n        <Typography\n          sx={{\n            marginTop: \"30px\",\n          }}\n          gutterBottom\n          variant=\"h2\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n        <Typography gutterBottom variant=\"h3\" component=\"div\">\n          {dateFormat(date, \"dddd, mmmm dS, yyyy\")}\n        </Typography>\n        <Typography>{explanation}</Typography>\n      </CardContent>\n      <CardActions>{renderLikeButton()}</CardActions>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}