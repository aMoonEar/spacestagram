{"ast":null,"code":"var _jsxFileName = \"/Users/mlj/Documents/spacestagram/src/components/photoGallery.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, Button, CircularProgress } from \"@mui/material\";\nimport dateFormat from \"dateformat\";\nimport { PhotoCard } from \"./photoCard\";\nimport PhotoService from \"../services/photoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PhotoGallery = () => {\n  _s();\n\n  const [lastDate] = React.useState(new Date());\n  const [isLoading, setLoading] = React.useState(false);\n  const [photos, setPhotos] = React.useState([]);\n  React.useEffect(() => {\n    getTenPhotos();\n  }, []); // Retrieve the first ten photos to display to the user\n\n  const getTenPhotos = () => {\n    setLoading(true); // subtracting 10 days\n\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\"); // Perform the API call\n\n    PhotoService.addPhotos({\n      startDate: formattedDate,\n      setLoading,\n      setPhotos,\n      photos\n    });\n  }; // Make another API call to get the next ten photos\n\n\n  const addTenPhotos = () => {\n    setLoading(true); // Keep the original date and subtract 1 day\n\n    const originalDate = lastDate;\n    originalDate.setDate(lastDate.getDate() - 1);\n    const formattedOriginalDate = dateFormat(lastDate, \"yyyy-mm-dd\"); // subtracting 10 days\n\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\"); // Perform the API call\n\n    PhotoService.addPhotos({\n      startDate: formattedDate,\n      endDate: formattedOriginalDate,\n      setLoading,\n      setPhotos,\n      photos\n    });\n  }; // Render the 'See More' button at the bottom of the page\n\n\n  const renderSeeMoreButton = () => {\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        sx: {\n          marginTop: \"40px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            margin: \"auto\"\n          },\n          variant: \"contained\",\n          onClick: addTenPhotos,\n          children: \"See more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  }; // Render the loading animation when photos are loading\n\n\n  const renderIsLoading = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: \"60px\"\n        },\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Fetching images from space...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoCard, {\n      copyright: photo.copyright,\n      date: photo.date,\n      explanation: photo.explanation,\n      title: photo.title,\n      url: photo.url,\n      media_type: photo.media_type\n    }, photo.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), renderIsLoading(), renderSeeMoreButton()]\n  }, void 0, true);\n};\n\n_s(PhotoGallery, \"IZYFu0j116noQaXSjRX6QnHHiz0=\");\n\n_c = PhotoGallery;\nexport default PhotoGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/components/photoGallery.tsx"],"names":["React","Typography","Box","Button","CircularProgress","dateFormat","PhotoCard","PhotoService","PhotoGallery","lastDate","useState","Date","isLoading","setLoading","photos","setPhotos","useEffect","getTenPhotos","setDate","getDate","formattedDate","addPhotos","startDate","addTenPhotos","originalDate","formattedOriginalDate","endDate","renderSeeMoreButton","marginTop","margin","renderIsLoading","map","photo","copyright","date","explanation","title","url","media_type"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, Button, CircularProgress } from \"@mui/material\";\nimport dateFormat from \"dateformat\";\nimport PhotoData from \"../types/photoData\";\nimport { PhotoCard } from \"./photoCard\";\nimport PhotoService from \"../services/photoService\";\n\nexport const PhotoGallery = (): JSX.Element => {\n  const [lastDate] = React.useState<Date>(new Date());\n  const [isLoading, setLoading] = React.useState<boolean>(false);\n  const [photos, setPhotos] = React.useState<PhotoData[]>([]);\n\n  React.useEffect(() => {\n    getTenPhotos();\n  }, []);\n\n  // Retrieve the first ten photos to display to the user\n  const getTenPhotos = () => {\n    setLoading(true);\n    // subtracting 10 days\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\");\n    // Perform the API call\n    PhotoService.addPhotos({\n      startDate: formattedDate,\n      setLoading,\n      setPhotos,\n      photos,\n    });\n  };\n\n  // Make another API call to get the next ten photos\n  const addTenPhotos = () => {\n    setLoading(true);\n\n    // Keep the original date and subtract 1 day\n    const originalDate = lastDate;\n    originalDate.setDate(lastDate.getDate() - 1);\n    const formattedOriginalDate = dateFormat(lastDate, \"yyyy-mm-dd\");\n\n    // subtracting 10 days\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\");\n    // Perform the API call\n    PhotoService.addPhotos({\n      startDate: formattedDate,\n      endDate: formattedOriginalDate,\n      setLoading,\n      setPhotos,\n      photos,\n    });\n  };\n\n  // Render the 'See More' button at the bottom of the page\n  const renderSeeMoreButton = () => {\n    if (!isLoading) {\n      return (\n        <Box textAlign=\"center\" sx={{ marginTop: \"40px\" }}>\n          <Button\n            sx={{ margin: \"auto\" }}\n            variant=\"contained\"\n            onClick={addTenPhotos}\n          >\n            See more\n          </Button>\n        </Box>\n      );\n    }\n  };\n\n  // Render the loading animation when photos are loading\n  const renderIsLoading = () => {\n    if (isLoading) {\n      return (\n        <Box sx={{ marginTop: \"60px\" }} textAlign=\"center\">\n          <CircularProgress color=\"secondary\" />\n          <Typography>Fetching images from space...</Typography>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <>\n      {photos.map((photo) => (\n        <PhotoCard\n          key={photo.title}\n          copyright={photo.copyright}\n          date={photo.date}\n          explanation={photo.explanation}\n          title={photo.title}\n          url={photo.url}\n          media_type={photo.media_type}\n        />\n      ))}\n      {renderIsLoading()}\n      {renderSeeMoreButton()}\n    </>\n  );\n};\n\nexport default PhotoGallery;\n"]},"metadata":{},"sourceType":"module"}