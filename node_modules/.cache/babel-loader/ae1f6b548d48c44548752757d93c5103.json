{"ast":null,"code":"var _jsxFileName = \"/Users/mlj/Documents/spacestagram/src/components/photoGallery.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Button } from \"@mui/material\";\nimport dateFormat from \"dateformat\"; // import PhotoService from \"../services/photoService\";\n\nimport { PhotoCard } from \"./photoCard\";\nimport PhotoService from \"../services/photoService\"; // every card has:\n// image, like button, title, explanation, date\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PhotoGallery = () => {\n  _s();\n\n  const [lastDate] = React.useState(new Date());\n  const [isLoading, setLoading] = React.useState(false);\n  const [photos, setPhotos] = React.useState([]);\n  React.useEffect(() => {\n    setLoading(true); // subtracting 10 days\n\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\"); // api call\n\n    PhotoService.getPhotos({\n      startDate: formattedDate,\n      setLoading,\n      setPhotos\n    });\n  }, []);\n\n  const seeMorePhotos = () => {};\n\n  const renderSeeMoreButton = () => {\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"See more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderIsLoading = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoCard, {\n      date: photo.date,\n      explanation: photo.explanation,\n      title: photo.title,\n      url: photo.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), renderIsLoading(), renderSeeMoreButton()]\n  }, void 0, true);\n};\n\n_s(PhotoGallery, \"IZYFu0j116noQaXSjRX6QnHHiz0=\");\n\n_c = PhotoGallery;\nexport default PhotoGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/components/photoGallery.tsx"],"names":["React","Button","dateFormat","PhotoCard","PhotoService","PhotoGallery","lastDate","useState","Date","isLoading","setLoading","photos","setPhotos","useEffect","setDate","getDate","formattedDate","getPhotos","startDate","seeMorePhotos","renderSeeMoreButton","renderIsLoading","map","photo","date","explanation","title","url"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,MADF,QAMO,eANP;AAOA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAEA;AACA;AAEA;;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAmB;AAAA;;AAC7C,QAAM,CAACC,QAAD,IAAaN,KAAK,CAACO,QAAN,CAAqB,IAAIC,IAAJ,EAArB,CAAnB;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BV,KAAK,CAACO,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACO,QAAN,CAA4B,EAA5B,CAA5B;AAEAP,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBH,IAAAA,UAAU,CAAC,IAAD,CAAV,CADoB,CAEpB;;AACAJ,IAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,CAACS,OAAT,KAAqB,EAAtC;AACA,UAAMC,aAAa,GAAGd,UAAU,CAACI,QAAD,EAAW,YAAX,CAAhC,CAJoB,CAKpB;;AACAF,IAAAA,YAAY,CAACa,SAAb,CAAuB;AAAEC,MAAAA,SAAS,EAAEF,aAAb;AAA4BN,MAAAA,UAA5B;AAAwCE,MAAAA;AAAxC,KAAvB;AACD,GAPD,EAOG,EAPH;;AASA,QAAMO,aAAa,GAAG,MAAM,CAAE,CAA9B;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAI,CAACX,SAAL,EAAgB;AACd,0BAAO,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAJD;;AAMA,QAAMY,eAAe,GAAG,MAAM;AAC5B,QAAIZ,SAAJ,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,eACGE,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,MAAA,WAAW,EAAED,KAAK,CAACE,WAFrB;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,MAAA,GAAG,EAAEH,KAAK,CAACI;AAJb;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EASGN,eAAe,EATlB,EAUGD,mBAAmB,EAVtB;AAAA,kBADF;AAcD,CA1CM;;GAAMf,Y;;KAAAA,Y;AA4Cb,eAAeA,YAAf","sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\nimport dateFormat from \"dateformat\";\n// import PhotoService from \"../services/photoService\";\nimport PhotoData from \"../types/photoData\";\nimport axios from \"axios\";\nimport { PhotoCard } from \"./photoCard\";\nimport PhotoService from \"../services/photoService\";\n\n// every card has:\n// image, like button, title, explanation, date\n\n// make another component that takes a start and end date and returns the images in that set (inclusive)\n\nexport const PhotoGallery = (): JSX.Element => {\n  const [lastDate] = React.useState<Date>(new Date());\n  const [isLoading, setLoading] = React.useState<boolean>(false);\n  const [photos, setPhotos] = React.useState<PhotoData[]>([]);\n\n  React.useEffect(() => {\n    setLoading(true);\n    // subtracting 10 days\n    lastDate.setDate(lastDate.getDate() - 10);\n    const formattedDate = dateFormat(lastDate, \"yyyy-mm-dd\");\n    // api call\n    PhotoService.getPhotos({ startDate: formattedDate, setLoading, setPhotos });\n  }, []);\n\n  const seeMorePhotos = () => {};\n\n  const renderSeeMoreButton = () => {\n    if (!isLoading) {\n      return <Button variant=\"contained\">See more</Button>;\n    }\n  };\n\n  const renderIsLoading = () => {\n    if (isLoading) {\n      return <h1>loading...</h1>;\n    }\n  };\n\n  return (\n    <>\n      {photos.map((photo) => (\n        <PhotoCard\n          date={photo.date}\n          explanation={photo.explanation}\n          title={photo.title}\n          url={photo.url}\n        />\n      ))}\n      {renderIsLoading()}\n      {renderSeeMoreButton()}\n    </>\n  );\n};\n\nexport default PhotoGallery;\n"]},"metadata":{},"sourceType":"module"}