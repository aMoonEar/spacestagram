{"ast":null,"code":"var _jsxFileName = \"/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box, Button } from \"@mui/material\";\n// @ts-ignore\nimport Heart from \"react-animated-heart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PhotoCard = _ref => {\n  _s();\n\n  let {\n    date,\n    explanation,\n    title,\n    url,\n    media_type\n  } = _ref;\n  const [isLiked, setLiked] = React.useState(false); // Render the like button that every photo contains\n\n  const renderLikeButton = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLiked(!isLiked),\n        variant: \"contained\",\n        size: \"small\",\n        sx: {\n          width: \"130px\"\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: \"-40px\",\n            marginTop: \"-32px\",\n            marginLeft: \"-50px\",\n            marginRight: \"-30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Heart, {\n            isClick: isLiked,\n            onClick: () => setLiked(!isLiked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            width: \"40px\"\n          },\n          children: isLiked ? \"Unlike\" : \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      sx: {\n        margin: \"auto\",\n        maxWidth: \"100\"\n      },\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this) // <Card\n  //   sx={{ maxWidth: 700, margin: \"auto\", marginTop: \"100px\", boxShadow: 1 }}\n  // >\n  //   <CardMedia\n  //     component={media_type == \"video\" ? \"iframe\" : \"img\"}\n  //     height={media_type == \"video\" ? \"600\" : \"\"}\n  //     src={url}\n  //   />\n  //   <CardContent sx={{ mx: 2 }}>\n  //     <Typography\n  //       sx={{\n  //         marginTop: \"30px\",\n  //       }}\n  //       gutterBottom\n  //       variant=\"h2\"\n  //     >\n  //       {title}\n  //     </Typography>\n  //     {renderLikeButton()}\n  //     {/* <Typography sx={{ marginTop: 2 }}>{explanation}</Typography> */}\n  //     <Typography sx={{ marginTop: 2 }} variant=\"body2\" gutterBottom>\n  //       {dateFormat(date, \"mmmm dS, yyyy\")}\n  //     </Typography>\n  //   </CardContent>\n  //   <CardActions></CardActions>\n  // </Card>\n  ;\n};\n\n_s(PhotoCard, \"H9KTnuaPGAZ7ARuZ+C7CT/stPe4=\");\n\n_c = PhotoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoCard\");","map":{"version":3,"sources":["/Users/mlj/Documents/spacestagram/src/components/photoCard.tsx"],"names":["React","Typography","Box","Button","Heart","PhotoCard","date","explanation","title","url","media_type","isLiked","setLiked","useState","renderLikeButton","width","marginBottom","marginTop","marginLeft","marginRight","margin","maxWidth"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,GADF,EAEEC,MAFF,QAOO,eAPP;AASA;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAUA,OAAO,MAAMC,SAAS,GAAG,QAMU;AAAA;;AAAA,MANT;AACxBC,IAAAA,IADwB;AAExBC,IAAAA,WAFwB;AAGxBC,IAAAA,KAHwB;AAIxBC,IAAAA,GAJwB;AAKxBC,IAAAA;AALwB,GAMS;AACjC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBZ,KAAK,CAACa,QAAN,CAAwB,KAAxB,CAA5B,CADiC,CAGjC;;AACA,QAAMC,gBAAgB,GAAG,MAAmB;AAC1C,wBACE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,CAACD,OAAF,CADzB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,EAAE,EAAE;AACFI,UAAAA,KAAK,EAAE;AADL,SAJN;AAOE,QAAA,SAAS,eACP,QAAC,GAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,YAAY,EAAE,OADZ;AAEFC,YAAAA,SAAS,EAAE,OAFT;AAGFC,YAAAA,UAAU,EAAE,OAHV;AAIFC,YAAAA,WAAW,EAAE;AAJX,WADN;AAAA,iCAQE,QAAC,KAAD;AAAO,YAAA,OAAO,EAAER,OAAhB;AAAyB,YAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF;AAAhD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA,+BAoBE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAhB;AAAA,oBACGJ,OAAO,GAAG,QAAH,GAAc;AADxB;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA4BD,GA7BD;;AA+BA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,EAAE,EAAE;AAAES,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAFN;AAGE,MAAA,GAAG,EAAEZ;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCF;AAmCD,CA5EM;;GAAMJ,S;;KAAAA,S","sourcesContent":["import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\nimport dateFormat from \"dateformat\";\n// @ts-ignore\nimport Heart from \"react-animated-heart\";\n\ntype PhotoCardProps = {\n  date: string;\n  explanation: string;\n  title: string;\n  url: string;\n  media_type: string;\n};\n\nexport const PhotoCard = ({\n  date,\n  explanation,\n  title,\n  url,\n  media_type,\n}: PhotoCardProps): JSX.Element => {\n  const [isLiked, setLiked] = React.useState<boolean>(false);\n\n  // Render the like button that every photo contains\n  const renderLikeButton = (): JSX.Element => {\n    return (\n      <>\n        <Button\n          onClick={() => setLiked(!isLiked)}\n          variant=\"contained\"\n          size=\"small\"\n          sx={{\n            width: \"130px\",\n          }}\n          startIcon={\n            <Box\n              sx={{\n                marginBottom: \"-40px\",\n                marginTop: \"-32px\",\n                marginLeft: \"-50px\",\n                marginRight: \"-30px\",\n              }}\n            >\n              <Heart isClick={isLiked} onClick={() => setLiked(!isLiked)} />\n            </Box>\n          }\n        >\n          <Typography sx={{ width: \"40px\" }}>\n            {isLiked ? \"Unlike\" : \"like\"}\n          </Typography>\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <Box>\n      <Box\n        component=\"img\"\n        sx={{ margin: \"auto\", maxWidth: \"100\" }}\n        src={url}\n      ></Box>\n    </Box>\n    // <Card\n    //   sx={{ maxWidth: 700, margin: \"auto\", marginTop: \"100px\", boxShadow: 1 }}\n    // >\n    //   <CardMedia\n    //     component={media_type == \"video\" ? \"iframe\" : \"img\"}\n    //     height={media_type == \"video\" ? \"600\" : \"\"}\n    //     src={url}\n    //   />\n    //   <CardContent sx={{ mx: 2 }}>\n    //     <Typography\n    //       sx={{\n    //         marginTop: \"30px\",\n    //       }}\n    //       gutterBottom\n    //       variant=\"h2\"\n    //     >\n    //       {title}\n    //     </Typography>\n    //     {renderLikeButton()}\n    //     {/* <Typography sx={{ marginTop: 2 }}>{explanation}</Typography> */}\n    //     <Typography sx={{ marginTop: 2 }} variant=\"body2\" gutterBottom>\n    //       {dateFormat(date, \"mmmm dS, yyyy\")}\n    //     </Typography>\n    //   </CardContent>\n    //   <CardActions></CardActions>\n    // </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}